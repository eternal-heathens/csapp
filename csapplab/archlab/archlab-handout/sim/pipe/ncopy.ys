#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	### 将rmmovq %r10, (%rsi)	# ...and store it to dst移到较后的位置，消除加载/使用冒险
# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-5, %rdx
	jg Loop6		# if so, goto Done:
	iaddq $5, %rdx
	jg Loop
	ret
Loop:	
	mrmovq (%rdi), %r10	# read val from src...
	rrmovq %rax, %r14
	iaddq $1, %r14
	andq %r10, %r10		# val <= 0?
	cmovg %r14, %rax	# if so, goto Npos:
	rmmovq %r10, (%rsi)	# ...and store it to dst
	
	iaddq $8, %rdi		# src++
	iaddq $8, %rsi		# dst++
	iaddq $-1, %rdx		# len--
	jg Loop			# if so, goto Loop:
	ret	


Loop6:	
	mrmovq (%rdi), %r10	# read val from src...
	rrmovq %rax, %r14
	iaddq $1, %r14
	andq %r10, %r10		# val <= 0?
	cmovg %r14, %rax	# if so, goto Npos:
	rmmovq %r10, (%rsi)	# ...and store it to dst

	mrmovq 8(%rdi), %r10	# read val from src...
	rrmovq %rax, %r14
	iaddq $1, %r14
	andq %r10, %r10		# val <= 0?
	cmovg %r14, %rax	# if so, goto Npos:
	rmmovq %r10, 8(%rsi)	# ...and store it to dst

	mrmovq 16(%rdi), %r10	# read val from src...
	rrmovq %rax, %r14
	iaddq $1, %r14
	andq %r10, %r10		# val <= 0?
	cmovg %r14, %rax	# if so, goto Npos:
	rmmovq %r10, 16(%rsi)	# ...and store it to dst


	mrmovq 24(%rdi), %r10	# read val from src...
	rrmovq %rax, %r14
	iaddq $1, %r14
	andq %r10, %r10		# val <= 0?
	cmovg %r14, %rax	# if so, goto Npos:
	rmmovq %r10, 24(%rsi)	# ...and store it to dst

	mrmovq 32(%rdi), %r10	# read val from src...
	rrmovq %rax, %r14
	iaddq $1, %r14
	andq %r10, %r10		# val <= 0?
	cmovg %r14, %rax	# if so, goto Npos:
	rmmovq %r10, 32(%rsi)	# ...and store it to dst

	mrmovq 40(%rdi), %r10	# read val from src...
	rrmovq %rax, %r14
	iaddq $1, %r14
	andq %r10, %r10		# val <= 0?
	cmovg %r14, %rax	# if so, goto Npos:
	rmmovq %r10, 40(%rsi)	# ...and store it to dst
	
	iaddq $48, %rdi		# src++
	iaddq $48, %rsi		# dst++
	iaddq $-6, %rdx		# len--
	jg Loop6			# if so, goto Loop:
	iaddq $5, %rdx
	jg Loop
		
	
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
